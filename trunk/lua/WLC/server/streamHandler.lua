--[[	Title: StreamHandler	Handles input and output streams.]]--- Includes the datastream library.require("datastream")--- Handles the input that client sent.function streamReceive( sender, handler, id, encoded, decoded )	-- Print the received command and its sender.	Msg("WLC command by '"..sender:Nick().."':\n")	Msg("\t"..decoded.command)	if table.Count(decoded.args) > 0 then		for key, value in pairs( decoded.args ) do			Msg(" "..value)		end	end		Msg("\n")	-- Check the received command and handle it if its valid.	result = inputCheck( sender, decoded.command, decoded.args )	if table.Count(result) == 0 then		result = inputHandle( sender, decoded.command, decoded.args )	end		-- Print and send the generated output.	if table.Count(result) > 0 then		Msg("Output:\n")		for key, value in pairs( result ) do			Msg("\t"..value.."\n")			umsg.Start("wlcServer", sender)			umsg.String(value)			umsg.End()		end	end		Msg("\n")enddatastream.Hook( "wlcClient", streamReceive )